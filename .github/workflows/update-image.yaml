name: Update K8s Image for my-app

on:
  repository_dispatch:
    types: [update-image]

jobs:
  update-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install yq
        run: |
          sudo apt-get update && sudo apt-get install -y yq

      - name: Extract and Validate Payload
        run: |
          # Debugging payload to verify structure
          echo "Received Payload:"
          echo '${{ toJson(github.event) }}'

          # Extract repository path and tag from the payload
          REPO_PATH="${{ github.event.client_payload.repository.name }}"
          NEW_TAG="${{ github.event.client_payload.tag }}"
          FILE_PATH="deployment.yaml"

          # Extract image name from the repository path
          IMAGE_NAME=$(echo "$REPO_PATH" | cut -d'/' -f1)

          # Ensure this workflow runs only for 'my-app'
          if [[ "$IMAGE_NAME" != "my-app" ]]; then
            echo "Skipping update. Image '${IMAGE_NAME}' is not 'my-app'."
            exit 0
          fi

          echo "Updating deployment for 'my-app' with tag: $NEW_TAG"

          # Update the image tag in deployment.yaml using yq
          yq -y -i '.spec.template.spec.containers[0].image = "'"${IMAGE_NAME}:${NEW_TAG}"'"' $FILE_PATH

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.ATLAS_GITHUB_PAT }}
        run: |
          set -e  # Exit on error

          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Authenticated repository URL using PAT
          REPO_URL="https://github.com/${{ github.repository }}.git"
          AUTH_REPO_URL="https://x-access-token:${GITHUB_TOKEN}@${REPO_URL#https://}"

          # Add, commit, and push changes
          echo "ðŸ“¥ Checking for changes..."
          git add deployment.yaml

          # Check if there are changes to commit
          if git diff --cached --quiet; then
            echo "âœ… No changes detected. Skipping commit."
            exit 0
          fi

          echo "âœ… Changes detected. Committing..."
          git commit -m "feat: update my-app image to $NEW_TAG"

          echo "ðŸš€ Pushing changes to the main branch..."
          git push "$AUTH_REPO_URL" HEAD:main
